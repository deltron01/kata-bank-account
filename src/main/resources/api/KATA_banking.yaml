openapi: 3.0.3
info:
  title: Swagger KATA Banking - OpenAPI 3.0
  description: |-
    This is a sample KATA Banking Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).

  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://donotaccess.randomserver.inexistent
tags:
  - name: KATA Banking
    description: EBanking operations made simple
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: store
    description: Access to Banking operations
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /bankAccount:
    put:
      tags:
        - bankAccount
      summary: Update an existing bankAccount
      description: Update an existing bankAccount by Id
      operationId: updateBankAccount
      requestBody:
        description: Update an existent bankAccount in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'          
        '400':
          description: Invalid ID supplied
        '404':
          description: BankAccount not found
        '405':
          description: Validation exception

  /bankAccount/deposit:
    put:
      tags:
        - deposit into bankAccount
      summary: deposit an amount into existing bankAccount
      description: deposit an amount into existing bankAccount
      operationId: depositInBankAccount
      requestBody:
        description: deposit an amount into existing bankAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountDeposit'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'   
        '400':
          description: Invalid ID supplied
        '404':
          description: BankAccount not found
        '405':
          description: Validation exception

  /bankAccount/withdraw:
    put:
      tags:
        - withdraw from a bankAccount
      summary: withdraw from an existing bankAccount
      description: withdraw from an existing bankAccount
      operationId: withdrawFromBankAccount
      requestBody:
        description: withdraw from an existing bankAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountWithdraw'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'   
        '400':
          description: Invalid ID supplied
        '404':
          description: BankAccount not found
        '405':
          description: Validation exception

  /bankAccount/findByOwner:
    post:
      tags:
        - bankAccountByOwner
      summary: Find BankAccounts by owner
      description: Find BankAccounts by owner.
      operationId: findBankAccountsByOwner
      requestBody:
        description: deposit an amount into existing bankAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankUser'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankAccount'          

        '400':
          description: Invalid tag value




  
components:
  schemas:

    BankUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        phone:
          type: string
          example: '12345'

    BankAccount:
      required:
        - accountNumber
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        accountNumber:
          type: string
          example: ABC123456789XYZ
        accountType:
          type: string
          enum:
            - SAVINGS
            - CHEQUE
        balance:
          type: integer
    BankAccountDeposit:
      required:
        - accountNumber
        - amount
      type: object
      properties:
        accountNumber:
          type: string
          example: ABC123456789XYZ
        amount:
          type: integer
    BankAccountWithdraw:
      required:
        - accountNumber
        - amount
      type: object
      properties:
        accountNumber:
          type: string
          example: ABC123456789XYZ
        amount:
          type: integer
